DF_loop$Age_DPF     <- Age_loop
DF_loop$Metric      <- colnames(data_loop[3])
# run both modles
AOVmod              <- aov(lm(as.numeric(data_loop$Length) ~ as.factor(data_loop$Larvae_pCO2)))
KWmod               <- kruskal.test(data_loop$Length  ~ as.factor(data_loop$Larvae_pCO2))
# normality tests for the anova model - asign
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
if(shapiro.test(resid(AOVmod))[[2]] > 0.05 & leveneTest(AOVmod)[[3]][[1]] > 0.05) {
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
} else {
DF_loop$model       <- 'kruskal-wallis; x ~ treatment'
DF_loop$DF.num      <- (KWmod)[[2]][["df"]][1]
DF_loop$DF.denom    <- NA
DF_loop$F_val       <- NA
DF_loop$P_val       <- (KWmod)[[3]]
DF_loop$SigDif      <- if( ((KWmod)[[3]]) > 0.05) {
'NO'} else {'YES'}
}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
View(AOVdf_total) # view all the anova tests within data
df_Exp2
# (1) First, run anova within date for all records (for looped!)
ANOVA_Age_DPF      <- as.data.frame(unique(df_Exp2$Age)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Age_DPF', 'Metric', 'ShapiroWilk', 'ResidNorm',
'Levenes', 'HomogVar', 'model', 'DF.num' , 'DF.denom',
'F_val','P_val', 'SigDif') # names for comuns in the for loop
for (i in 1:nrow(ANOVA_Age_DPF)) {
Age_loop     <- as.character(ANOVA_Age_DPF[i,])
data_loop     <- df_Exp2 %>% # call the dataset above - after 30 dpf and for only the two treatments
dplyr::filter(Age %in% Age_loop) %>%
dplyr::select(Age, Larvae_pCO2, GR)
# high cholorphyll model
DF_loop$Age_DPF     <- Age_loop
DF_loop$Metric      <- colnames(data_loop[3])
# run both modles
AOVmod              <- aov(lm(as.numeric(data_loop$Length) ~ as.factor(data_loop$Larvae_pCO2)))
KWmod               <- kruskal.test(data_loop$Length  ~ as.factor(data_loop$Larvae_pCO2))
# normality tests for the anova model - asign
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
if(shapiro.test(resid(AOVmod))[[2]] > 0.05 & leveneTest(AOVmod)[[3]][[1]] > 0.05) {
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
} else {
DF_loop$model       <- 'kruskal-wallis; x ~ treatment'
DF_loop$DF.num      <- (KWmod)[[2]][["df"]][1]
DF_loop$DF.denom    <- NA
DF_loop$F_val       <- NA
DF_loop$P_val       <- (KWmod)[[3]]
DF_loop$SigDif      <- if( ((KWmod)[[3]]) > 0.05) {
'NO'} else {'YES'}
}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
df_Exp2
# (1) First, run anova within date for all records (for looped!)
ANOVA_Age_DPF      <- as.data.frame(unique(df_Exp2$Age)) # call a list to loop in
AOVdf_total       <- data.frame() # start dataframe, this will be the master output
DF_loop           <- data.frame(matrix(nrow = 1, ncol = 12)) # create dataframe to save during for loop
colnames(DF_loop) <- c('Age_DPF', 'Metric', 'ShapiroWilk', 'ResidNorm',
'Levenes', 'HomogVar', 'model', 'DF.num' , 'DF.denom',
'F_val','P_val', 'SigDif') # names for comuns in the for loop
for (i in 1:nrow(ANOVA_Age_DPF)) {
Age_loop     <- as.character(ANOVA_Age_DPF[i,])
data_loop     <- df_Exp2 %>% # call the dataset above - after 30 dpf and for only the two treatments
dplyr::filter(Age %in% Age_loop) %>%
dplyr::select(Age, Larvae_pCO2, GR)
# high cholorphyll model
DF_loop$Age_DPF     <- Age_loop
DF_loop$Metric      <- colnames(data_loop[3])
# run both modles
AOVmod              <- aov(lm(as.numeric(data_loop$GR) ~ as.factor(data_loop$Larvae_pCO2)))
KWmod               <- kruskal.test(data_loop$GR  ~ as.factor(data_loop$Larvae_pCO2))
# normality tests for the anova model - asign
DF_loop$ShapiroWilk <- shapiro.test(resid(AOVmod))[[2]]
DF_loop$ResidNorm   <- if( shapiro.test(resid(AOVmod))[[2]] > 0.05) {
'YES'} else {'NO'}
DF_loop$Levenes     <- leveneTest(AOVmod)[[3]][[1]]
DF_loop$HomogVar    <- if( leveneTest(AOVmod)[[3]][[1]] > 0.05) {
'YES'} else {'NO'}
if(shapiro.test(resid(AOVmod))[[2]] > 0.05 & leveneTest(AOVmod)[[3]][[1]] > 0.05) {
DF_loop$model       <- 'one-way AOV; x ~ treatment'
DF_loop$DF.num      <- summary(AOVmod)[[1]][["Df"]][1]
DF_loop$DF.denom    <- summary(AOVmod)[[1]][["Df"]][2]
DF_loop$F_val       <- summary(AOVmod)[[1]][["F value"]][1]
DF_loop$P_val       <- summary(AOVmod)[[1]][["Pr(>F)"]][1]
DF_loop$SigDif      <- if( (summary(AOVmod)[[1]][["Pr(>F)"]][1]) > 0.05) {
'NO'} else {'YES'}
} else {
DF_loop$model       <- 'kruskal-wallis; x ~ treatment'
DF_loop$DF.num      <- (KWmod)[[2]][["df"]][1]
DF_loop$DF.denom    <- NA
DF_loop$F_val       <- NA
DF_loop$P_val       <- (KWmod)[[3]]
DF_loop$SigDif      <- if( ((KWmod)[[3]]) > 0.05) {
'NO'} else {'YES'}
}
# asign loop and cumulative output table
df          <- data.frame(DF_loop) # name dataframe for this single row
AOVdf_total <- rbind(AOVdf_total,DF_loop) #bind to a cumulative list dataframe
print(AOVdf_total) # print to monitor progress
}
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis/Data")
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_multigen_OA/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
library(Rmisc)
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
aovMOD_F2_21 <- lm(sucessful.metamorphosis ~ Exposure.OA, data=df_F2_21)
#Here we are assing our data fram the name "df" so that we do not have to type out the full file name everytime we want to call it.
df<-read.csv("metamorphosis.csv", header = T)
#df$Percent.deformed=as.numeric(df$Percent.deformed)
df$Parent=as.factor(df$Parent)
df$Ttreatment=as.factor(df$Treatment)
df$Exposure.OA=as.factor(df$Exposure.OA)
df$Rep=as.factor(df$Rep)
df$Generation=as.factor(df$Generation)
df$Treatment <- factor(df$Treatment,levels = c("Low OA", "Moderate OA", "High OA"))
df$Exposure.OA <- factor(df$Exposure.OA,levels = c("LOW", "MODERATE", "HIGH"))
df$Parent <- factor(df$Parent,levels = c("LOW", "MODERATE", "HIGH"))
#to look at columns names of your data frame
head(df)
#Sturcture of the data - to check that variables are properly assigned to facotr or variable
str(df)
df$precent.metamorphose <- (df$live_spat)/(df$live_spat+df$live_larvae)
df_F2_21 <- df%>%
filter(Age=="21")
df_F3_19 <- df%>%
filter(Age=="19")
ggplot(data=df_F2_21, aes(x=Exposure.OA, y=sucessful.metamorphosis, fill=Exposure.OA)) +
geom_boxplot()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Percent Successful metamorphosis (2023: F2 Larvae - Age 21 days) ", x ="Treatment", y = "Percent sucessful metamorphosis")
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
#stL_F1 %>% kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
ggplot(data=stL_df_F2_21, aes(x=Exposure.OA, y=precent.metamorphose, fill=Exposure.OA)) +
geom_point()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
geom_errorbar(aes(ymin=precent.metamorphose-sd, ymax=precent.metamorphose+sd), width=.2,
position=position_dodge(.9)) +
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Percent Metamorphosed (2023: F2 Larvae - Age 21 days) ", x ="Treatment", y = "Percent metamorphosed")
stL_df_F2_21 <- summarySE(df_F2_21, measurevar="precent.metamorphose", groupvars=c("Exposure.OA"))
#stL_F1 %>% kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
ggplot(data=stL_df_F2_21, aes(x=Exposure.OA, y=precent.metamorphose, fill=Exposure.OA)) +
geom_point()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
geom_errorbar(aes(ymin=precent.metamorphose-sd, ymax=precent.metamorphose+sd), width=.2,
position=position_dodge(.9)) +
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Percent Metamorphosed (2023: F2 Larvae - Age 21 days) ", x ="Treatment", y = "Percent metamorphosed")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Katie's
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
library(ggplot2)
library(tidyr)
library(dplyr)
library(rcompanion)
library(FSA)
library(car)
library(forcats)
library(kableExtra) # nice Rmd tables
library(emmeans)
library(ggpubr)
library(Rmisc)
df<-read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistancy using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None")) %>%
dplyr::mutate(treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2")) %>%
# change the levels for order when plotting - call as factors too!
dplyr::mutate(Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
dplyr::mutate(treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA) %>%
dplyr::rename(Larvae_pCO2  = treatment) # done
head(df)
str(df)
df<-read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistancy using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None")) %>%
dplyr::mutate(treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2")) %>%
# change the levels for order when plotting - call as factors too!
dplyr::mutate(Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
dplyr::mutate(treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA) %>%
dplyr::rename(Larvae_pCO2  = treatment) # done
df <- df%>%
filter(Stage=="larvae")
head(df)
str(df)
# number of runs
unique(df$Generation) # 1 , 2, 3
unique(df$Run) # 2, 4 and 6
Rep_Summary_all <- df %>% dplyr::select(c(Generation, Run, Age, Parent_pCO2, Larvae_pCO2)) %>%
dplyr::group_by_all() %>%
dplyr::summarise(n=n())
# print the runs
# summary:
Rep_Summary_Exp1 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 2)
Rep_Summary_Exp1 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp4 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 4)
Rep_Summary_Exp4 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp6 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 6)
Rep_Summary_Exp6 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
df_Exp2 <- df%>%
filter(Run=="2")
df_Exp4 <- df%>%
filter(Run=="4")
df_Exp6 <- df%>%
filter(Run=="6")
Exp2_summ <- summarySE(df_Exp2, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp2_MeanSE <- ggplot(Exp2_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #2 (F1)",
x="Age (days)",
y="Shell Length (μm)") + #scale_y_continuous(breaks=seq(0,100,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
# axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp2_MeanSE)
df<-read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistancy using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None")) %>%
dplyr::mutate(treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2")) %>%
# change the levels for order when plotting - call as factors too!
dplyr::mutate(Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
dplyr::mutate(treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2", "Moderate pCO2", "High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA) %>%
dplyr::rename(Larvae_pCO2  = treatment) # done
df <- df%>%
filter(Stage=="larvae")
head(df)
str(df)
# number of runs
unique(df$Generation) # 1 , 2, 3
unique(df$Run) # 2, 4 and 6
Rep_Summary_all <- df %>% dplyr::select(c(Generation, Run, Age, Parent_pCO2, Larvae_pCO2)) %>%
dplyr::group_by_all() %>%
dplyr::summarise(n=n())
# print the runs
# summary:
Rep_Summary_Exp1 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 2)
Rep_Summary_Exp1 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp4 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 4)
Rep_Summary_Exp4 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp6 <- Rep_Summary_all %>%  dplyr::filter(Run %in% 6)
Rep_Summary_Exp6 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
df_Exp2 <- df%>%
filter(Run=="2")
df_Exp4 <- df%>%
filter(Run=="4")
df_Exp6 <- df%>%
filter(Run=="6")
Exp2_summ <- summarySE(df_Exp2, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp2_MeanSE <- ggplot(Exp2_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #2 (F1)",
x="Age (days)",
y="Shell Length (μm)") + #scale_y_continuous(breaks=seq(0,100,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
# axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp2_MeanSE)
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") + #scale_y_continuous(breaks=seq(0,100,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp4_MeanSE)
library(ggplot2)
library(gridExtra)
library(grid)
pdf("Output/Shell_length/Shell_length.pdf", width=8, height=6)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2.5, 4))) # 3 rows, 5 columns
print(Exp2_MeanSE, vp = vplayout(1, 1:2))
Exp6_summ <- summarySE(df_Exp6, measurevar="Length", groupvars=c("Age", "Larvae_pCO2", "Parent_pCO2"))
Exp6_summ <- summarySE(df_Exp6, measurevar="Length", groupvars=c("Age", "Larvae_pCO2", "Parent_pCO2"))
library(ggplot2)
library(gridExtra)
library(grid)
pdf("Output/Shell_length/Shell_length.pdf", width=8, height=6)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2.5, 4))) # 3 rows, 5 columns
print(Exp2_MeanSE, vp = vplayout(1, 1:2))
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") + scale_y_continuous(breaks=seq(0,220,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")+
print(Exp4_MeanSE)
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") + scale_y_continuous(breaks=seq(0,220,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp4_MeanSE)
Exp2_summ <- summarySE(df_Exp2, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp2_MeanSE <- ggplot(Exp2_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #2 (F1)",
x="Age (days)",
y="Shell Length (μm)") + scale_y_continuous(breaks=seq(0,220,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
# axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp2_MeanSE)
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") + scale_y_continuous(breaks=seq(0,200,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp4_MeanSE)
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") + scale_y_continuous(breaks=seq(60,200,20))+
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
print(Exp4_MeanSE)
Exp4_summ <- summarySE(df_Exp4, measurevar="Length", groupvars=c("Age", "Larvae_pCO2"))
Exp4_MeanSE <- ggplot(Exp4_summ, aes(x=Age, y=Length, color=Larvae_pCO2))+ geom_line()+
geom_point()+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1)) +
scale_color_manual(values=c("green4", "darkorange1", "purple"))+
theme(legend.position="right",
legend.direction="vertical",
legend.title = element_blank())+ theme_bw() +
labs(title = "Experiment #4 (F2)",
x="Age (days)",
y="Shell Length (μm)") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")+
scale_y_continuous(breaks=seq(0,200,20))+
print(Exp4_MeanSE)
