loopDF[c(1:count_dead),6] = 1 # 1 for dead
loopDF[c((count_dead + 1):nrow(loopDF)),6] = 0 # 0 for alive
loopDF           <- data.frame(loopDF) # name dataframe for this single row
binary_Exp4_all <- rbind(binary_Exp4_all,loopDF) #bind to a cumulative list dataframe
}
# To address tank as a random factor it MUST be numeric, change this here
unique(binary_Exp4_all$Tank) # "A" "B" "C" "D" "E" NA
binary_Exp4_all <- binary_Exp4_all %>%
dplyr::mutate(Generation = 2,
Tank_num = case_when(Tank== 'A'~1,
Tank== 'B'~2,
Tank== 'C'~3)) %>%
dplyr::mutate(Tank = paste0(substr(Parent_pCO2,1,1),
substr(Larvae_pCO2,1,1),
'_',
Tank_num)) %>%
na.omit()
# (2) Mean counts alive and dead by tank - better representated for plots!
# difference here is we take a mean for counts alive and dead within treatment, no tank included and a singluar line for plotting
df_Exp4_MEANS <- df_Exp4 %>%
dplyr::select(-c(Generation, Tank, Date, Percent_Survival, proportion)) %>%
dplyr::group_by(Larvae_pCO2, Age) %>%
dplyr::summarise(mean_Count_alive = mean(Count_alive),
mean_Count_dead = mean(Count_dead))
# call datafarme binary for plotting
binary_Exp4_MEANS       <- data.frame() # start dataframe
# run it
for (i in 1:nrow(df_Exp4_MEANS)) {
#count_alive <- round(df_Exp4_MEANS[i,]$mean_Count_alive/100) # divide all counts by 1000, round to nearest
#count_dead  <- round(df_Exp4_MEANS[i,]$mean_Count_dead/100)  # divide all counts by 1000, round to nearest
count_alive <- round(df_Exp4_MEANS[i,]$mean_Count_alive) # divide all counts by 1000, round to nearest
count_dead  <- round(df_Exp4_MEANS[i,]$mean_Count_dead)  # divide all counts by 1000, round to nearest
loopDF           <- data.frame(matrix(0,ncol = 3, nrow = (count_alive + count_dead)))
colnames(loopDF) <- (c('Larvae_pCO2','Age','Count_dead'))
loopDF           <- loopDF %>%
dplyr::mutate(
Larvae_pCO2 = df_Exp4_MEANS[i,]$Larvae_pCO2,
Age         = df_Exp4_MEANS[i,]$Age
)
loopDF[c(1:count_dead),3] = 1 # 1 for dead
loopDF[c((count_dead + 1):nrow(loopDF)),3] = 0 # 0 for alive
loopDF             <- data.frame(loopDF) # name dataframe for this single row
binary_Exp4_MEANS <- rbind(binary_Exp4_MEANS,loopDF) #bind to a cumulative list dataframe
}
# run it
for (i in 1:nrow(df_Exp4_MEANS)) {
#count_alive <- round(df_Exp4_MEANS[i,]$mean_Count_alive/100) # divide all counts by 1000, round to nearest
#count_dead  <- round(df_Exp4_MEANS[i,]$mean_Count_dead/100)  # divide all counts by 1000, round to nearest
count_alive <- round(df_Exp4_MEANS[i,]$mean_Count_alive) # divide all counts by 1000, round to nearest
count_dead  <- round(df_Exp4_MEANS[i,]$mean_Count_dead)  # divide all counts by 1000, round to nearest
loopDF           <- data.frame(matrix(0,ncol = 3, nrow = (count_alive + count_dead)))
colnames(loopDF) <- (c('Larvae_pCO2','Age','Count_dead'))
loopDF           <- loopDF %>%
dplyr::mutate(
Larvae_pCO2 = df_Exp4_MEANS[i,]$Larvae_pCO2,
Age         = df_Exp4_MEANS[i,]$Age
)
loopDF[c(1:count_dead),3] = 1 # 1 for dead
loopDF[c((count_dead + 1):nrow(loopDF)),3] = 0 # 0 for alive
loopDF             <- data.frame(loopDF) # name dataframe for this single row
binary_Exp4_MEANS <- rbind(binary_Exp4_MEANS,loopDF) #bind to a cumulative list dataframe
}
binary_Exp4_MEANS <- binary_Exp4_MEANS %>%
dplyr::mutate(Generation = 2) %>%
na.omit()
binary_Exp4_larvae      <- binary_Exp4_all %>% filter(Age <=14) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
binary_Exp4_larvaeMEANS <- binary_Exp4_MEANS %>% filter(Age <=14) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
# all - with tank replicate included
# BIG CHANGE ON 9/16/2024 - our notes indicate that FIRST METAMORPHOSIS IN F2S OCCURED AT 12 DPF!!! NOT 14
# the previous analysis remains the same (meeting with Dianna and Shannon 9/6/2024)
# however the anlaysis here, standardizing time to FIRST OBSERVATION of metamorphosis neeeds to change for F2s!
# below in the binary_Exp_Exp4_all I commented out the VERY MINOR code change to do this, review what I did below
head(binary_Exp2_larvae)
View(binary_Exp2_Exp4_all)
binary_Exp2_Exp4_all             <- rbind(binary_Exp2_larvae,# %>% dplyr::select(!cluster)),
(binary_Exp4_larvae %>%
dplyr::select(!Tank_num)) # %>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
)# %>%
# dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
# dplyr::filter(!Prop_time_metamophosis >1)
unique(binary_Exp2_Exp4_all$Prop_time_metamophosis)
# omit high pCO2 as a level in larvae pCO2 - just compare moderate and low here
binary_Exp2_Exp4_all$Larvae_pCO2 <- factor(binary_Exp2_Exp4_all$Larvae_pCO2, exclude = 'High pCO2')
#  by mean tank
binary_Exp2_Exp4_MEANS             <- rbind(binary_Exp2_larvaeMEANS,
binary_Exp4_larvaeMEANS #%>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
) %>%
dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) # %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
#dplyr::filter(!Prop_time_metamophosis >1)
binary_Exp2_Exp4_MEANS$Larvae_pCO2 <- factor(binary_Exp2_Exp4_MEANS$Larvae_pCO2, exclude = 'High pCO2')
unique(binary_Exp2_Exp4_MEANS$Prop_time_metamophosis)
# sanity check
binary_Exp2_Exp4_all %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
binary_Exp2_Exp4_MEANS %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
# Subsets to explore further
binary_Exp2_Exp4_larvaeLOW       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_MEANS_larvaeLOW <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_larvaeMOD       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
binary_Exp2_Exp4_MEANS_larvaeMOD <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
# what days are included?
unique(binary_Exp2_larvae$Age) # 2  4  8 10
unique(binary_Exp4_larvae$Age) # 2  6  8 10 14
unique(binary_Exp2_Exp4_all$Age) #  2  4  8 10  6 # NOTE: 9/6/2024, day 14 is gonzo!
unique(binary_Exp2_larvaeMEANS$Age) # 2  4  8 10
unique(binary_Exp4_larvaeMEANS$Age) # 2  6  8 10 14
unique(binary_Exp2_Exp4_MEANS$Age) #  2  4  8 10  6 # NOTE: 9/6/2024, day 14 is gonzo!
binary_Exp4_larvae      <- binary_Exp4_all #%>% filter(Age <=14) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
binary_Exp4_larvae      <- binary_Exp4_all %>% #filter(Age <=14) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
binary_Exp4_larvaeMEANS <- binary_Exp4_MEANS %>% #filter(Age <=14) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
# all - with tank replicate included
# BIG CHANGE ON 9/16/2024 - our notes indicate that FIRST METAMORPHOSIS IN F2S OCCURED AT 12 DPF!!! NOT 14
# the previous analysis remains the same (meeting with Dianna and Shannon 9/6/2024)
# however the anlaysis here, standardizing time to FIRST OBSERVATION of metamorphosis neeeds to change for F2s!
# below in the binary_Exp_Exp4_all I commented out the VERY MINOR code change to do this, review what I did below
head(binary_Exp2_larvae)
head(binary_Exp4_larvae)
binary_Exp2_Exp4_all             <- rbind(binary_Exp2_larvae,# %>% dplyr::select(!cluster)),
(binary_Exp4_larvae %>%
dplyr::select(!Tank_num)) # %>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
)# %>%
# dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
# dplyr::filter(!Prop_time_metamophosis >1)
unique(binary_Exp2_Exp4_all$Prop_time_metamophosis)
# omit high pCO2 as a level in larvae pCO2 - just compare moderate and low here
binary_Exp2_Exp4_all$Larvae_pCO2 <- factor(binary_Exp2_Exp4_all$Larvae_pCO2, exclude = 'High pCO2')
#  by mean tank
binary_Exp2_Exp4_MEANS             <- rbind(binary_Exp2_larvaeMEANS,
binary_Exp4_larvaeMEANS #%>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
) %>%
dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) # %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
#dplyr::filter(!Prop_time_metamophosis >1)
binary_Exp2_Exp4_MEANS$Larvae_pCO2 <- factor(binary_Exp2_Exp4_MEANS$Larvae_pCO2, exclude = 'High pCO2')
unique(binary_Exp2_Exp4_MEANS$Prop_time_metamophosis)
# sanity check
binary_Exp2_Exp4_all %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
binary_Exp2_Exp4_MEANS %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
# Subsets to explore further
binary_Exp2_Exp4_larvaeLOW       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_MEANS_larvaeLOW <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_larvaeMOD       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
binary_Exp2_Exp4_MEANS_larvaeMOD <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
binary_Exp2_Exp4_MEANS_larvaeMOD <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
# what days are included?
unique(binary_Exp2_larvae$Age) # 2  4  8 10
unique(binary_Exp4_larvae$Age) # 2  6  8 10 14
unique(binary_Exp2_Exp4_all$Age) #  2  4  8 10  6 # NOTE: 9/6/2024, day 14 is gonzo!
unique(binary_Exp2_larvaeMEANS$Age) # 2  4  8 10
unique(binary_Exp4_larvaeMEANS$Age) # 2  6  8 10 14
binary_Exp4_larvae      <- binary_Exp4_all %>% filter(Age <=15) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
binary_Exp4_larvaeMEANS <- binary_Exp4_MEANS %>% filter(Age <=15) %>% # F1 - aligned timepoint prior to F1 metamorph for Gen 1 and 2 comparisons
dplyr::mutate(Prop_time_metamophosis = Age/12)
binary_Exp2_Exp4_all             <- rbind(binary_Exp2_larvae,# %>% dplyr::select(!cluster)),
(binary_Exp4_larvae %>%
dplyr::select(!Tank_num)) # %>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
)# %>%
# dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
# dplyr::filter(!Prop_time_metamophosis >1)
unique(binary_Exp2_Exp4_all$Prop_time_metamophosis)
# omit high pCO2 as a level in larvae pCO2 - just compare moderate and low here
binary_Exp2_Exp4_all$Larvae_pCO2 <- factor(binary_Exp2_Exp4_all$Larvae_pCO2, exclude = 'High pCO2')
#  by mean tank
binary_Exp2_Exp4_MEANS             <- rbind(binary_Exp2_larvaeMEANS,
binary_Exp4_larvaeMEANS #%>%
#dplyr::filter(!Age %in% 14)) # NOTE: 9/6/2024, omit 14 dpf from the F2s, truncate out the post inital obs of metamorph
) %>%
dplyr::filter(!(Larvae_pCO2 == 'High pCO2')) # %>%
# dplyr::mutate(Prop_time_metamophosis =
# case_when(Generation == 1 ~ (Age / 10),
# Generation == 2 ~ (Age / 12))) %>% # NOTE: 9/6/2024, change from 14 to 12to correct for the note stated above!!!
# omit timpoints after 10 days for Gen 1 and after 14 days for Gen 2
#dplyr::filter(!Prop_time_metamophosis >1)
binary_Exp2_Exp4_MEANS$Larvae_pCO2 <- factor(binary_Exp2_Exp4_MEANS$Larvae_pCO2, exclude = 'High pCO2')
unique(binary_Exp2_Exp4_MEANS$Prop_time_metamophosis)
# sanity check
binary_Exp2_Exp4_all %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
binary_Exp2_Exp4_MEANS %>% dplyr::filter(Prop_time_metamophosis > 1) # should be no data!
# Subsets to explore further
binary_Exp2_Exp4_larvaeLOW       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_MEANS_larvaeLOW <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Low pCO2")
binary_Exp2_Exp4_larvaeMOD       <- binary_Exp2_Exp4_all %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
binary_Exp2_Exp4_MEANS_larvaeMOD <- binary_Exp2_Exp4_MEANS %>% filter(Larvae_pCO2 %in% "Moderate pCO2")
# what days are included?
unique(binary_Exp2_larvae$Age) # 2  4  8 10
unique(binary_Exp4_larvae$Age) # 2  6  8 10 14
unique(binary_Exp2_Exp4_all$Age) #  2  4  8 10  6 # NOTE: 9/6/2024, day 14 is gonzo!
unique(binary_Exp2_larvaeMEANS$Age) # 2  4  8 10
unique(binary_Exp4_larvaeMEANS$Age) # 2  6  8 10 14
unique(binary_Exp2_Exp4_MEANS$Age) #  2  4  8 10  6 # NOTE: 9/6/2024, day 14 is gonzo!
binary_Exp2_Exp4_MEANS_2 <- binary_Exp2_Exp4_MEANS %>% dplyr::filter(!Age == 14)
s1_2          <- survfit2(Surv(Age, Count_dead) ~ Larvae_pCO2+Generation, data = binary_Exp2_Exp4_MEANS)
binary_Exp2_Exp4_all$Generation <- as.character(binary_Exp2_Exp4_all$Generation)
binary_Exp2_Exp4_all$Gen_pCO2   <- paste0(as.character(binary_Exp2_Exp4_all$Generation),
'_',
(binary_Exp2_Exp4_all$Larvae_pCO2))
binary_Exp2_Exp4_all$ID         <- paste0(binary_Exp2_Exp4_all$Tank, # true random factor for the coxme model
'_',
binary_Exp2_Exp4_all$Gen_pCO2)
# MIXED COX PROPRTION HAZARDS MODEL
binary_Exp2_Exp4_all <- binary_Exp2_Exp4_all%>% dplyr::filter(!Larvae_pCO2 %in% NA)
unique(binary_Exp2_Exp4_all$Larvae_pCO2)
# interaction
binary_Exp2_Exp4_all$ID <- factor(binary_Exp2_Exp4_all$ID)
binary_Exp2_Exp4_all     <- droplevels(binary_Exp2_Exp4_all)
Exp2_Exp4_coxme_test_table   <- coxme(Surv(Prop_time_metamophosis, Count_dead) ~ Gen_pCO2 +
(1 | ID), data = binary_Exp2_Exp4_all) %>%
tbl_regression(exp = TRUE)
Exp2_Exp4_coxme_all_table.add  <- coxme(formula = Surv(Prop_time_metamophosis, Count_dead) ~
Generation + Larvae_pCO2 + (1 | ID),
data = binary_Exp2_Exp4_all) %>%
tbl_regression(exp = TRUE)
Exp2_Exp4_coxme_all_table.add
s1_2_proptime <- survfit2(Surv(Prop_time_metamophosis, Count_dead) ~ Larvae_pCO2+Generation, data = binary_Exp2_Exp4_MEANS)
Exp2_Exp4_larvaeKaplanMeier <- s1_2_proptime %>%
ggsurvfit(linetype_aes = FALSE, linewidth = 1) +
scale_color_manual(values = c("green","forestgreen",
"orange","darkorange4")) +
scale_fill_manual(values = c("green","forestgreen",
"orange","darkorange4")) +
labs(
x = "Proportion time to metamorphosis",
y = "Overall survival probability"
) +
add_confidence_interval() +
# add_risktable() +
# add_risktable_strata_symbol() + # symbol = "\U25CF", size = 10
scale_ggsurvfit(x_scales = list(breaks = 0:1)) #+
Exp2_Exp4_larvaeKaplanMeier
>>>>>>> cf6004e39ed1bf95da7664e1cd487ed25d691430
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
#knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Katie's
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's work
library(ggplot2)
library(tidyr)
library(dplyr)
library(rcompanion)
library(FSA)
library(car)
library(forcats)
library(kableExtra) # nice Rmd tables install.packages('kableExtra')
library(emmeans)
library(ggpubr)
library(Rmisc)
library(rstatix)
library(nlme)
library(lme4)
library(multcomp)
library(Matrix)
?Matrix
df     <- read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistency using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None"),
treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2"),
Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2",
"Moderate pCO2",
"High pCO2"))),
treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2",
"Moderate pCO2",
"High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA,
Larvae_pCO2  = treatment,
Experiment = Run) # done
df     <- read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistency using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None"),
treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2"),
Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2",
"Moderate pCO2",
"High pCO2"))),
treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2",
"Moderate pCO2",
"High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA,
Larvae_pCO2  = treatment,
Experiment = Run) # done
# SET WORKING DIRECTORY
#knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Katie's
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's work
df     <- read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistency using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None"),
treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2"),
Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2",
"Moderate pCO2",
"High pCO2"))),
treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2",
"Moderate pCO2",
"High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA,
Larvae_pCO2  = treatment,
Experiment = Run) # done
GrowthData <- df  %>% filter(Stage=="larvae")
str(GrowthData)
# number of runs
unique(GrowthData$Generation) # 1 and 2
unique(GrowthData$Experiment) # 2 and 4
Rep_Summary_all <- GrowthData %>% dplyr::select(c(Generation, Experiment, Age, Parent_pCO2, Larvae_pCO2)) %>%
dplyr::group_by_all() %>%
dplyr::summarise(n=n())
Rep_Summary_Exp2 <- Rep_Summary_all %>%  dplyr::filter(Experiment %in% 2)
Rep_Summary_Exp2 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp2 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp4 <- Rep_Summary_all %>%  dplyr::filter(Experiment %in% 4)
Rep_Summary_Exp4 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Exp2 <- GrowthData %>%
filter(Experiment=="2")
Exp4 <- GrowthData %>%
filter(Experiment=="4")
library(lmerTest) # otherwise lme4 does not report table
hist(Exp2_GLMMs$Length)
library(DHARMa)
library(lmerTest) # otherwise lme4 does not report table
hist(Exp2_GLMMs$Length)
# (2.1) All treatment Low, moderate, and high
Exp2_GLMMs    <-  Exp2 %>%
dplyr::select(ID, Larvae_pCO2, Age,Length) %>%
rstatix::convert_as_factor(ID, Larvae_pCO2, Age) %>%
na.omit() # prGR is normmalized to the inital measurement, these are NAs, omit them
str(Exp2_GLMMs)
# RUN STATISTICAL MODEL  ::::::::::::::::::::::::::::::::::
library(nlme)
library(lme4)
library(Matrix)
# GLMM
Exp2_GLMM_all <- glmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
Gamma(link="identity")
)
anova(Exp2_GLMM_all)
car::Anova(Exp2_GLMM_all, type=3)
# LMM via lme4 and nlme
# ?lmerTest
?lmerTest
Exp2_LMM.lme4 <- lmerTest::lmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
)
# LMM via lme4 and nlme
?lmerTest
Exp2_LMM.lme4 <- lmerTest::lmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
)
library(Matrix)
Exp2_LMM.lme4 <- lmerTest::lmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
)
ls_means_LarvepCO2 <- lmerTest::ls_means(Exp2_LMM.lme4,
which = 'Larvae_pCO2',
level = 0.95,
ddf = 'Satterthwaite',
# ddf = "Kenward-Roger",
pairwise = TRUE)
library(lmerTest)
Exp2_LMM.lme4 <- lmerTest::lmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
)
library(lme4)
Exp2_LMM.lme4 <- lmerTest::lmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
#knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Katie's
#knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis") # Sam's work
library(ggplot2)
library(tidyr)
library(dplyr)
library(rcompanion)
library(FSA)
library(car)
library(forcats)
library(kableExtra) # nice Rmd tables install.packages('kableExtra')
library(emmeans)
library(ggpubr)
library(Rmisc)
library(rstatix)
library(nlme)
library(lme4)
library(multcomp)
library(Matrix)
df     <- read.csv("Data/larval_growth.csv", header = T) %>%
dplyr::mutate(Lengh = as.numeric(Length)) %>%
# rename the variables for consistency using 'case_when'
dplyr::mutate(Parental_OA = case_when(Parental_OA ==  "LOW" ~ "Low pCO2",
Parental_OA ==  "MODERATE" ~ "Moderate pCO2",
Parental_OA ==  "HIGH" ~ "High pCO2",
Parental_OA ==  "WILD" ~ "None"),
treatment = case_when(treatment ==  "Low OA" ~ "Low pCO2",
treatment ==  "Moderate OA" ~ "Moderate pCO2",
treatment ==  "High OA" ~ "High pCO2"),
Parental_OA = as.factor(forcats::fct_relevel(Parental_OA,
c("Low pCO2",
"Moderate pCO2",
"High pCO2"))),
treatment = as.factor(forcats::fct_relevel(treatment,
c("Low pCO2",
"Moderate pCO2",
"High pCO2")))) %>%
# rename them
dplyr::rename(Parent_pCO2 = Parental_OA,
Larvae_pCO2  = treatment,
Experiment = Run) # done
# number of runs
unique(GrowthData$Generation) # 1 and 2
unique(GrowthData$Experiment) # 2 and 4
Rep_Summary_all <- GrowthData %>% dplyr::select(c(Generation, Experiment, Age, Parent_pCO2, Larvae_pCO2)) %>%
dplyr::group_by_all() %>%
dplyr::summarise(n=n())
# number of runs
unique(GrowthData$Generation) # 1 and 2
unique(GrowthData$Experiment) # 2 and 4
GrowthData <- df  %>% filter(Stage=="larvae")
str(GrowthData)
# number of runs
unique(GrowthData$Generation) # 1 and 2
unique(GrowthData$Experiment) # 2 and 4
Rep_Summary_all <- GrowthData %>% dplyr::select(c(Generation, Experiment, Age, Parent_pCO2, Larvae_pCO2)) %>%
dplyr::group_by_all() %>%
dplyr::summarise(n=n())
Rep_Summary_Exp2 <- Rep_Summary_all %>%  dplyr::filter(Experiment %in% 2)
Rep_Summary_Exp2 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Rep_Summary_Exp4 <- Rep_Summary_all %>%  dplyr::filter(Experiment %in% 4)
Rep_Summary_Exp4 %>%  kbl() %>% kable_classic(full_width = F, html_font = "Cambria")
Exp2 <- GrowthData %>%
filter(Experiment=="2")
Exp4 <- GrowthData %>%
filter(Experiment=="4")
hist(Exp2_GLMMs$Length)
# (2.1) All treatment Low, moderate, and high
Exp2_GLMMs    <-  Exp2 %>%
dplyr::select(ID, Larvae_pCO2, Age,Length) %>%
rstatix::convert_as_factor(ID, Larvae_pCO2, Age) %>%
na.omit() # prGR is normmalized to the inital measurement, these are NAs, omit them
str(Exp2_GLMMs)
# GLMM
Exp2_GLMM_all <- glmer(
Length ~
Larvae_pCO2 * Age + (1 | ID),
data = Exp2_GLMMs,
Gamma(link="identity")
)
